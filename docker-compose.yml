version: '3.8'

networks:
  rabbitmq_main:
    external: true

services:
  api_php:
    container_name: api_php
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    restart: always
    volumes:
      - ./:/var/www/
      - /var/www/vendor
      - /var/www/var
    depends_on:
      - api_postgres
    ports:
      - "9000:9000"
    networks:
      - rabbitmq_main

  api_postgres:
    container_name: api_postgres
    image: postgres:13.1-alpine
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: password
    networks:
      - rabbitmq_main

  nginx:
    container_name: nginx
    image: nginx:1.19.6-alpine
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/log:/var/log/nginx/
    depends_on:
      - api_php
    networks:
      - rabbitmq_main

  api_adminer:
    container_name: api_adminer
    image: adminer:4
    restart: always
    ports:
      - "8000:8080"
    depends_on:
      - api_php
      - api_postgres
    networks:
      - rabbitmq_main

  redis:
    container_name: redis
    image: redis:6.0-alpine
    restart: always
    networks:
      - rabbitmq_main


